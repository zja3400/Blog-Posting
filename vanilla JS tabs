<!DOCTYPE html>
<html lang="ko">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>tabs</title>
    <style>
        /* Tabs */
        .tab-nav {
            margin: 0;
            padding: 0;
        }
        .tab-link {
            margin-right: 5px;
            padding: 10px 20px;
            color: #fff;
            display: inline-block;
            background-color: #b3b3b3;
            text-decoration: none;
        }
        .tab-link.is-active {
            text-decoration: underline;
            color: #dc446e;
            background-color: #e7e7e7;
        }
        .tab-link:last-child {
            margin-right: 0;
        }		
        .tab-link:hover {
            text-decoration: underline;
            color: #dc446e;
            background-color: #e7e7e7;
        }
        
        /* Tab Content */
        .tab-content {
            display: none;
            background-color: #e7e7e7;
        }
        .tab-content.is-active {
            display: block;
            padding: 20px;
        }	

        /* Generic styling not specific to tabs */
        body {
            max-width: 600px;
            margin: 3rem auto;
            font: 14px/1.5 "IBM Plex Sans Condensed", sans-serif;
            font-weight: normal;
        }

        .tab-contents {
           margin-bottom: 100px;
        }    
    </style>
</head>
<body>
    <!-- First set on page -->
    <p>First set on page</p>

    <div id="tabs1" class="tab-contents no-js">
        <div class="tab-nav">
            <a href="#" class="tab-link is-active">The push start</a>
            <a href="#" class="tab-link">Difficulties</a>
            <a href="#" class="tab-link">Crashes</a>
        </div>
        <div class="tab-content is-active">
            <p>섹션1</p>
        </div>
        <div class="tab-content">
            <p>섹션2</p>
        </div>
        <div class="tab-content">
            <p>섹션3</p>
        </div>
    </div>

    <!-- Second set on page -->
    <p>Second set on page</p>

    <div id="tabs2" class="tab-contents no-js">
        <div class="tab-nav">
            <a href="#" class="tab-link is-active">Calgary</a>
            <a href="#" class="tab-link">Fools</a>
            <a href="#" class="tab-link">Bubblehead</a>
        </div>
        <div class="tab-content is-active">
            <p>섹션1</p>
        </div>
        <div class="tab-content">
            <p>섹션2</p>
        </div>
        <div class="tab-content">
            <p>섹션3</p>
        </div>
    </div>

    <script>
        // Start tabs.js
        (function() {

        'use strict';

        /**
         * tabs
         *
         * @description The Tabs component.
         * @param {Object} options The options hash
         */
        var tabs = function(options) {

        var el = document.querySelector(options.el);
        var tabNavigationLinks = el.querySelectorAll(options.tabNavigationLinks);
        var tabContentContainers = el.querySelectorAll(options.tabContentContainers);
        var activeIndex = 0;
        var initCalled = false;

        /**
         * init
         *
         * @description Initializes the component by removing the no-js class from
         *   the component, and attaching event listeners to each of the nav items.
         *   Returns nothing.
         */
        var init = function() {
            if (!initCalled) {
            initCalled = true;
            el.classList.remove('no-js');
            
            for (var i = 0; i < tabNavigationLinks.length; i++) {
                var link = tabNavigationLinks[i];
                handleClick(link, i);
            }
            }
        };

        /**
         * handleClick
         *
         * @description Handles click event listeners on each of the links in the
         *   tab navigation. Returns nothing.
         * @param {HTMLElement} link The link to listen for events on
         * @param {Number} index The index of that link
         */

        var handleClick = function(link, index) {
            link.addEventListener('click', function(e) {
            e.preventDefault();
            goToTab(index);
            });
        };

        /**
         * goToTab
         *
         * @description Goes to a specific tab based on index. Returns nothing.
         * @param {Number} index The index of the tab to go to
         */

        var goToTab = function(index) {
            if (index !== activeIndex && index >= 0 && index <= tabNavigationLinks.length) {
            tabNavigationLinks[activeIndex].classList.remove('is-active');
            tabNavigationLinks[index].classList.add('is-active');
            tabContentContainers[activeIndex].classList.remove('is-active');
            tabContentContainers[index].classList.add('is-active');
            activeIndex = index;
            }
        };

        /**
         * Returns init and goToTab
         */
        return {
            init: init,
            goToTab: goToTab
        };

        };

        /**
         * Attach to global namespace
         */
        window.tabs = tabs;

        })();
        // End tabs.js

        // Initialise at bottom of HTML in a <script> tag or within your main js bundle somewhere.

        // Set 1 
        var myTabs1 = tabs({
        el: '#tabs1',
        tabNavigationLinks: '.tab-link',
        tabContentContainers: '.tab-content'
        });

        // Set 2
        var myTabs2 = tabs({
        el: '#tabs2',
        tabNavigationLinks: '.tab-link',
        tabContentContainers: '.tab-content'
        });

        // Initialise Set 1
        myTabs1.init();
        // Initialise Set 2 
        myTabs2.init();    
    </script>
</body>
</html>
